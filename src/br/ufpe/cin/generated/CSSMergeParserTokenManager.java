/* Generated By:JavaCC: Do not edit this line. CSSMergeParserTokenManager.java */
package br.ufpe.cin.generated;

import java.io.*;
import java.util.*;
import cide.gast.*;
import cide.gparser.*;
import de.ovgu.cide.fstgen.ast.*;
import cide.gparser.*;
public class CSSMergeParserTokenManager implements CSSMergeParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 10:
         return jjStopAtPos(0, 3);
      case 12:
         return jjStopAtPos(0, 5);
      case 13:
         return jjStopAtPos(0, 4);
      case 32:
         return jjStopAtPos(0, 1);
      case 47:
         return jjMoveStringLiteralDfa1_0(0x40L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 111;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAddStates(0, 2);
                  }
                  else if (curChar == 39)
                  {
                     if (kind > 27)
                        kind = 27;
                     jjCheckNAddStates(3, 7);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 27)
                        kind = 27;
                     jjCheckNAddStates(8, 12);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 51;
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(40, 41);
                  else if (curChar == 45)
                     jjAddStates(13, 14);
                  break;
               case 2:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(15, 18);
                  break;
               case 6:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(19, 25);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(26, 28);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(29, 32);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(33, 37);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(38, 43);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(44, 47);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(48, 54);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(55, 57);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(58, 61);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(62, 66);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(67, 72);
                  break;
               case 20:
                  if (curChar == 45)
                     jjAddStates(73, 74);
                  break;
               case 22:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 24:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(75, 78);
                  break;
               case 26:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(79, 85);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(86, 88);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(89, 92);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(93, 97);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(98, 103);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(104, 107);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(108, 114);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(115, 117);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(118, 121);
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(122, 126);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(127, 132);
                  break;
               case 39:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 40:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 42:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(133, 136);
                  break;
               case 44:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(137, 143);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(144, 146);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(147, 150);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(151, 155);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(156, 161);
                  break;
               case 50:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAddTwoStates(52, 50);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(52, 50);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAddStates(0, 2);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAdd(54);
                  break;
               case 55:
                  if (curChar != 34)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(8, 12);
                  break;
               case 56:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 57:
                  if (curChar == 34 && kind > 26)
                     kind = 26;
                  break;
               case 59:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 60:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if (curChar == 10)
                     jjCheckNAddStates(162, 164);
                  break;
               case 62:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(165, 169);
                  break;
               case 64:
                  if ((0x3600L & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(170, 177);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(178, 181);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(182, 186);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(187, 192);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(193, 199);
                  break;
               case 70:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 72:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 73:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 74:
                  if (curChar != 10)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 75:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(200, 203);
                  break;
               case 77:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(204, 210);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(211, 213);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(214, 217);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(218, 222);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(223, 228);
                  break;
               case 83:
                  if (curChar != 39)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(3, 7);
                  break;
               case 84:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 85:
                  if (curChar == 39 && kind > 26)
                     kind = 26;
                  break;
               case 87:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 88:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 89:
                  if (curChar == 10)
                     jjCheckNAddStates(229, 231);
                  break;
               case 90:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(232, 236);
                  break;
               case 92:
                  if ((0x3600L & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(237, 244);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(245, 248);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(249, 253);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(254, 259);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(260, 266);
                  break;
               case 98:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 100:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 101:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if (curChar != 10)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 103:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(267, 270);
                  break;
               case 105:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(271, 277);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(278, 280);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(281, 284);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(285, 289);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(290, 295);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                     jjCheckNAddTwoStates(2, 3);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(4, 13);
                  else if (curChar == 64)
                     jjAddStates(296, 298);
                  break;
               case 1:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 3:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 5:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(15, 18);
                  break;
               case 7:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(19, 25);
                  break;
               case 8:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(26, 28);
                  break;
               case 9:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(29, 32);
                  break;
               case 10:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(33, 37);
                  break;
               case 11:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(38, 43);
                  break;
               case 12:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(4, 13);
                  break;
               case 13:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(44, 47);
                  break;
               case 14:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(48, 54);
                  break;
               case 15:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(55, 57);
                  break;
               case 16:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(58, 61);
                  break;
               case 17:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(62, 66);
                  break;
               case 18:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddStates(67, 72);
                  break;
               case 19:
                  if (curChar == 64)
                     jjAddStates(296, 298);
                  break;
               case 21:
               case 22:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 23:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(24, 25);
                  break;
               case 24:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 25:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(75, 78);
                  break;
               case 27:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(79, 85);
                  break;
               case 28:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(86, 88);
                  break;
               case 29:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(89, 92);
                  break;
               case 30:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(93, 97);
                  break;
               case 31:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(98, 103);
                  break;
               case 32:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(24, 33);
                  break;
               case 33:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(104, 107);
                  break;
               case 34:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(108, 114);
                  break;
               case 35:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(115, 117);
                  break;
               case 36:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(118, 121);
                  break;
               case 37:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(122, 126);
                  break;
               case 38:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(127, 132);
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if (curChar == 92)
                     jjAddStates(299, 300);
                  break;
               case 42:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 43:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(133, 136);
                  break;
               case 45:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(137, 143);
                  break;
               case 46:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(144, 146);
                  break;
               case 47:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(147, 150);
                  break;
               case 48:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(151, 155);
                  break;
               case 49:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(156, 161);
                  break;
               case 56:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 58:
                  if (curChar == 92)
                     jjAddStates(301, 304);
                  break;
               case 62:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 63:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(165, 169);
                  break;
               case 65:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(170, 177);
                  break;
               case 66:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(178, 181);
                  break;
               case 67:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(182, 186);
                  break;
               case 68:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(187, 192);
                  break;
               case 69:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(193, 199);
                  break;
               case 70:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 71:
                  if (curChar == 92)
                     jjAddStates(305, 308);
                  break;
               case 75:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 76:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(200, 203);
                  break;
               case 78:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(204, 210);
                  break;
               case 79:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(211, 213);
                  break;
               case 80:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(214, 217);
                  break;
               case 81:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(218, 222);
                  break;
               case 82:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(223, 228);
                  break;
               case 84:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 86:
                  if (curChar == 92)
                     jjAddStates(309, 312);
                  break;
               case 90:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 91:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(232, 236);
                  break;
               case 93:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(237, 244);
                  break;
               case 94:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(245, 248);
                  break;
               case 95:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(249, 253);
                  break;
               case 96:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(254, 259);
                  break;
               case 97:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(260, 266);
                  break;
               case 98:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 99:
                  if (curChar == 92)
                     jjAddStates(313, 316);
                  break;
               case 103:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 104:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(267, 270);
                  break;
               case 106:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(271, 277);
                  break;
               case 107:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(278, 280);
                  break;
               case 108:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(281, 284);
                  break;
               case 109:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(285, 289);
                  break;
               case 110:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddStates(290, 295);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
               case 2:
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 21:
               case 22:
               case 24:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 40:
               case 42:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 56:
               case 62:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(162, 164);
                  break;
               case 70:
               case 75:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 84:
               case 90:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 98:
               case 103:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 111 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   54, 52, 50, 84, 85, 98, 99, 86, 56, 57, 70, 71, 58, 1, 12, 2, 
   6, 3, 7, 2, 8, 6, 3, 9, 10, 11, 2, 6, 3, 2, 8, 6, 
   3, 2, 8, 6, 3, 9, 2, 8, 6, 3, 9, 10, 6, 2, 3, 14, 
   15, 6, 2, 3, 16, 17, 18, 6, 2, 3, 15, 6, 2, 3, 15, 6, 
   2, 3, 16, 15, 6, 2, 3, 16, 17, 21, 32, 22, 26, 23, 27, 22, 
   28, 26, 23, 29, 30, 31, 22, 26, 23, 22, 28, 26, 23, 22, 28, 26, 
   23, 29, 22, 28, 26, 23, 29, 30, 26, 22, 23, 34, 35, 26, 22, 23, 
   36, 37, 38, 26, 22, 23, 35, 26, 22, 23, 35, 26, 22, 23, 36, 35, 
   26, 22, 23, 36, 37, 40, 44, 41, 45, 40, 46, 44, 41, 47, 48, 49, 
   40, 44, 41, 40, 46, 44, 41, 40, 46, 44, 41, 47, 40, 46, 44, 41, 
   47, 48, 56, 57, 58, 56, 64, 57, 58, 65, 56, 66, 64, 57, 58, 67, 
   68, 69, 56, 64, 57, 58, 56, 66, 64, 57, 58, 56, 66, 64, 57, 58, 
   67, 56, 66, 64, 57, 58, 67, 68, 70, 77, 71, 78, 70, 79, 77, 71, 
   80, 81, 82, 70, 77, 71, 70, 79, 77, 71, 70, 79, 77, 71, 80, 70, 
   79, 77, 71, 80, 81, 84, 85, 86, 84, 92, 85, 86, 93, 84, 94, 92, 
   85, 86, 95, 96, 97, 84, 92, 85, 86, 84, 94, 92, 85, 86, 84, 94, 
   92, 85, 86, 95, 84, 94, 92, 85, 86, 95, 96, 98, 105, 99, 106, 98, 
   107, 105, 99, 108, 109, 110, 98, 105, 99, 98, 107, 105, 99, 98, 107, 105, 
   99, 108, 98, 107, 105, 99, 108, 109, 20, 21, 32, 42, 43, 59, 60, 62, 
   63, 72, 73, 75, 76, 87, 88, 90, 91, 100, 101, 103, 104, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_MULTI_LINE_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0x3f000001L, 
};
static final long[] jjtoSkip = {
   0xbeL, 
};
static final long[] jjtoSpecial = {
   0xbeL, 
};
static final long[] jjtoMore = {
   0x140L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[111];
private final int[] jjstateSet = new int[222];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public CSSMergeParserTokenManager(CharStream stream){
   input_stream = stream;
}
public CSSMergeParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 111; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   t.offset = input_stream.getOffset();
   t.length = input_stream.getLength();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else 
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
}
